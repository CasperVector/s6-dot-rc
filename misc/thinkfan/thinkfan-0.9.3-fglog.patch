License: same as the license of the upstream package.

--- src/message.c	2016-05-05 00:56:44.000000000 +0800
+++ src/message.c	2018-02-06 00:28:20.417957767 +0800
@@ -29,8 +29,8 @@
 	int level = chk_sanity ? nlevel : dlevel;
 
 	va_start(ap, format);
-	if (nodaemon && (!quiet || level > LOG_WARNING)) {
-		fputs(prefix, stderr);
+	if (nodaemon) {
+		if (quiet && level > LOG_INFO) return;
 		vfprintf(stderr, format, ap);
 		prefix = "";
 	}
--- src/thinkfan.c	2016-05-05 00:56:44.000000000 +0800
+++ src/thinkfan.c	2018-02-06 00:24:52.928186653 +0800
@@ -236,8 +236,6 @@
 #endif
 
 	openlog("thinkfan", LOG_CONS, LOG_USER);
-	syslog(LOG_INFO, "thinkfan " VERSION " starting...");
-
 	interrupted = 0;
 	memset(&handler, 0, sizeof(handler));
 	handler.sa_handler = sig_handler;
@@ -335,6 +333,7 @@
 		}
 	}
 	watchdog_timeout = sleeptime * 6;
+	report(LOG_WARNING, LOG_INFO, "thinkfan " VERSION " starting...\n");
 
 	ret = run();
 
@@ -410,7 +409,7 @@
 			else report(LOG_ERR, LOG_ERR, MSG_ERR_CONF_RELOAD);
 		}
 		else if (SIGINT == interrupted || interrupted == SIGTERM) {
-			report(LOG_WARNING, LOG_INFO, "\nCaught deadly signal. ");
+			report(LOG_WARNING, LOG_INFO, "Caught deadly signal.\n");
 			break;
 		}
 	}
